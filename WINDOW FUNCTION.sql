SELECT * FROM PRODUCTS;

-- ASSING A UNIQUE ROW NUMBER TO EACH PRODUCT WITHIN THE SAME CATEGORY
--OVER () WE USE FOR PARTITION WITH HELP OF SELECTED CATEGORY AND HELP OF ORDER BY
-- THIS GIVE SAME NUMBER FOR A  ALL SAME CATEGORY PRODUCT
SELECT PRODUCT_NAME, CATEGORY,PRICE,
ROW_NUMBER() OVER(PARTITION  BY CATEGORY  ORDER BY PRICE DESC) AS ROW_NUM
FROM PRODUCTS;

--DENSE_RANK GIVES THE RANKING IN BETWEEN IN A SINGLE CATEGORY( 3 ITEMAS IN  CATEGORY WILL RANKING 1,2 3)
SELECT PRODUCT_NAME, CATEGORY,PRICE,
DENSE_RANK() OVER(PARTITION  BY CATEGORY  ORDER BY PRICE DESC) AS RANKING_NUM
FROM PRODUCTS;



--SUM() GIVES A SUM OF FIRST 2 PRICE STORE IN 2ND ROW OF RUNNIN_TOTAL.THEN SUM 3 PRICE STORE IN 3ND ROW OF RUNNIN_TOTAL
SELECT PRODUCT_NAME, CATEGORY,PRICE,
SUM(PRICE) OVER(PARTITION  BY CATEGORY  ORDER BY PRICE DESC) AS RUNNING_TOTAL
FROM PRODUCTS;


--AVERAGE()
SELECT PRODUCT_NAME, CATEGORY,PRICE,
AVG(PRICE) OVER(PARTITION  BY CATEGORY  ORDER BY PRICE DESC) AS RUNNING_TOTAL
FROM PRODUCTS;
